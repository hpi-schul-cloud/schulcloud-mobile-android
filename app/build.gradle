apply plugin: 'com.android.application'
apply from: '../config/quality/quality.gradle'
apply plugin: 'com.github.triplet.play'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'realm-android'
apply plugin: 'io.fabric'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.3'

    defaultConfig {
        applicationId 'org.schulcloud.mobile'
        minSdkVersion 16
        targetSdkVersion 25
        testInstrumentationRunner "${applicationId}.runner.RxAndroidJUnitRunner"
        versionCode 1002
        // Major -> Millions, Minor -> Thousands, Bugfix -> Hundreds. E.g 1.3.72 == 1,003,072
        versionName '0.1.2'
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        // You must set up an environment var before release signing
        // Run: export APP_KEY={password}
        // TODO Add your release keystore in /keystore folder
        release {
            storeFile file('keystore/release.keystore')
            keyAlias 'alias'
            storePassword "$System.env.APP_KEY"
            keyPassword "$System.env.APP_KEY"
        }

        debug {
            storeFile file('keystore/debug.keystore')
            keyAlias 'androiddebugkey'
            storePassword 'android'
            keyPassword 'android'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            shrinkResources false
            zipAlignEnabled true

            ext.betaDistributionReleaseNotesFilePath =
                    file('../crashlytics_release_notes.txt').absolutePath

            buildConfigField "String", "URL_ENDPOINT", "\"https://schul-cloud.org:8080\""
        }

        debug {
            versionNameSuffix " Debug"
            debuggable true

            buildConfigField "String", "URL_ENDPOINT", "\"https://schul-cloud.org:8080\""
        }
    }

    sourceSets {
        def commonTestDir = 'src/commonTest/java'
        test {
            java.srcDir commonTestDir
        }
        androidTest {
            java.srcDir commonTestDir
        }
        main {
            res.srcDirs =
                    [
                            'src/main/res/layouts/courses',
                            'src/main/res/layouts/feedback',
                            'src/main/res/layouts/dashboard',
                            'src/main/res/layouts/homework',
                            'src/main/res/layouts/files',
                            'src/main/res/layouts/main',
                            'src/main/res/layouts/navigationDrawer',
                            'src/main/res/layouts/settings',
                            'src/main/res/layouts/signIn',
                            'src/main/res/layouts/start',
                            'src/main/res/layouts',
                            'src/main/res'
                    ]
            assets.srcDirs = ['src/main/assets', 'src/main/assets/']
        }
    }

    //Needed because of this https://github.com/square/okio/issues/58
    lintOptions {
        warning 'InvalidPackage'
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

play {
    serviceAccountEmail = 'your-service-account-email'
    pk12File = file('key.p12')
    // By default publishes to Alpha channel
    track = 'alpha'
}

dependencies {
    final PLAY_SERVICES_VERSION = '9.6.1'
    final SUPPORT_LIBRARY_VERSION = '25.3.1'
    final RETROFIT_VERSION = '2.1.0'
    final OKHTTP_VERSION = '3.4.1'
    final DAGGER_VERSION = '2.5'
    final PARCELER_VERSION = '1.1.5'
    final BUTTERKNIFE_VERSION = '8.1.0'
    final DEXMAKER_VERSION = '1.4'
    final HAMCREST_VERSION = '1.3'
    final POWERMOCK_VERSION = '1.6.4'
    final ESPRESSO_VERSION = '2.2.1'
    final RUNNER_VERSION = '0.4'

    def daggerCompiler = "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    def jUnit = "junit:junit:4.12"
    def mockito = "org.mockito:mockito-core:1.10.19"

    // App Dependencies
    compile "com.google.android.gms:play-services-gcm:$PLAY_SERVICES_VERSION"
    compile "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:cardview-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:design:$SUPPORT_LIBRARY_VERSION"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'

    compile "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:adapter-rxjava:$RETROFIT_VERSION"
    compile "com.squareup.okhttp3:okhttp:$OKHTTP_VERSION"
    compile "com.squareup.okhttp3:logging-interceptor:$OKHTTP_VERSION"

    compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true;
    }

    compile 'andhradroid.dev:aFilechooser:1.0.1'
    compile 'com.github.johnpersano:supertoasts:2.0'

    compile "org.parceler:parceler-api:$PARCELER_VERSION"
    apt "org.parceler:parceler:$PARCELER_VERSION"

    compile "com.jakewharton:butterknife:$BUTTERKNIFE_VERSION"
    apt "com.jakewharton:butterknife-compiler:$BUTTERKNIFE_VERSION"

    // Picasso
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'

    compile "com.google.dagger:dagger:$DAGGER_VERSION"
    //Required by Dagger2
    apt daggerCompiler
    testApt daggerCompiler
    androidTestApt daggerCompiler

    // GMS Google and Firebase
    apply plugin: 'com.google.gms.google-services'

    // Instrumentation test dependencies
    androidTestCompile jUnit
    androidTestCompile mockito
    androidTestCompile "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:$ESPRESSO_VERSION") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    androidTestCompile "com.android.support.test.espresso:espresso-core:$ESPRESSO_VERSION"
    androidTestCompile "com.android.support.test:runner:$RUNNER_VERSION"
    androidTestCompile "com.android.support.test:rules:$RUNNER_VERSION"
    androidTestCompile "com.crittercism.dexmaker:dexmaker:$DEXMAKER_VERSION"
    androidTestCompile "com.crittercism.dexmaker:dexmaker-dx:$DEXMAKER_VERSION"
    androidTestCompile "com.crittercism.dexmaker:dexmaker-mockito:$DEXMAKER_VERSION"

    // Unit tests dependencies
    testCompile jUnit
    testCompile mockito
    testCompile "org.powermock:powermock-module-junit4:$POWERMOCK_VERSION"
    testCompile "org.powermock:powermock-module-junit4-rule:$POWERMOCK_VERSION"
    testCompile "org.powermock:powermock-api-mockito:$POWERMOCK_VERSION"
    testCompile "org.powermock:powermock-classloading-xstream:$POWERMOCK_VERSION"
    testCompile "org.hamcrest:hamcrest-core:$HAMCREST_VERSION"
    testCompile "org.hamcrest:hamcrest-library:$HAMCREST_VERSION"
    testCompile "org.hamcrest:hamcrest-integration:$HAMCREST_VERSION"
    compile 'com.beardedhen:androidbootstrap:2.3.0'
    compile 'com.google.firebase:firebase-core:9.6.1'
    compile 'com.google.firebase:firebase-messaging:9.6.1'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava:1.1.6'
    compile 'com.jakewharton.timber:timber:4.1.2'
    testCompile 'org.powermock:powermock-core:1.6.4'
    testCompile 'org.robolectric:robolectric:3.1'
    provided 'org.glassfish:javax.annotation:10.0-b28'
}

// Log out test results to console
tasks.matching { it instanceof Test }.all {
    testLogging.events = ["failed", "passed", "skipped"]
}
