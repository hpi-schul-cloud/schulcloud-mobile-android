dependencies {

    // kotlin
    def kotlinCoroutinesVersion = '1.1.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${kotlinCoroutinesVersion}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${kotlinCoroutinesVersion}"
    implementation 'ru.gildor.coroutines:kotlin-coroutines-retrofit:1.1.0'

    // networking
    def okhttpVersion = '3.10.0'
    implementation "com.squareup.okhttp3:okhttp:${okhttpVersion}"
    implementation "com.squareup.okhttp3:logging-interceptor:${okhttpVersion}"
    implementation 'info.guardianproject.netcipher:netcipher:1.2'

    // retrofit
    def retrofitVersion = '2.3.0'
    implementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"

    // json
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation "com.squareup.retrofit2:converter-gson:${retrofitVersion}"

    // html
    implementation 'org.jsoup:jsoup:1.11.3'

    // images
    def glideVersion = '4.8.0'
    implementation "com.github.bumptech.glide:glide:${glideVersion}"
    implementation "com.github.bumptech.glide:okhttp3-integration:${glideVersion}"
    kapt "com.github.bumptech.glide:compiler:${glideVersion}"

    // date and time
    def jodatimeVersion = '2.9.9'
    implementation "net.danlew:android.joda:${jodatimeVersion}"

    // onboarding
    implementation 'com.getkeepsafe.taptargetview:taptargetview:1.12.0'
    implementation "com.github.MFlisar:changelog:1.1.5"

    // Firebase
    implementation 'com.google.firebase:firebase-core:16.0.8'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.9'

    // AndroidX
    // architecture
    def androidxLifecycleVersion = '2.0.0'
    implementation "androidx.multidex:multidex:2.0.1"
    implementation "androidx.appcompat:appcompat:1.0.2"
    implementation "androidx.lifecycle:lifecycle-extensions:${androidxLifecycleVersion}"
    kapt "androidx.lifecycle:lifecycle-compiler:${androidxLifecycleVersion}"
    implementation 'android.arch.navigation:navigation-ui-ktx:1.0.0'
    implementation 'android.arch.navigation:navigation-fragment-ktx:1.0.0'
    implementation "androidx.browser:browser:1.0.0"
    implementation "androidx.annotation:annotation:1.0.2"
    // ui
    implementation "com.google.android.material:material:1.1.0-alpha04"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.0.0"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"
    implementation "androidx.preference:preference:1.1.0-alpha04"
    // other
    implementation "androidx.core:core-ktx:1.0.1"
    androidTestImplementation "androidx.annotation:annotation:1.0.2"

    // unit tests
    def spekVersion = '2.0.1'
    def mockkVersion = '1.9.2'
    def junitVersion = '5.4.0'
    def robolectricVersion = '4.2.1'
    def espressoVersion = '3.1.1'
    testImplementation "androidx.arch.core:core-testing:${androidxLifecycleVersion}"
    testImplementation 'androidx.test:core:1.1.0'
    testImplementation "org.spekframework.spek2:spek-dsl-jvm:$spekVersion"
    testImplementation "org.spekframework.spek2:spek-runner-junit5:$spekVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "org.junit.jupiter:junit-jupiter:$junitVersion"
    testImplementation "org.junit.vintage:junit-vintage-engine:$junitVersion"
    testImplementation "joda-time:joda-time:$jodatimeVersion"
    testImplementation "junit:junit:4.12"
    testImplementation "org.robolectric:robolectric:${robolectricVersion}"
    testImplementation "org.robolectric:shadows-multidex:${robolectricVersion}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${kotlinCoroutinesVersion}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${kotlinCoroutinesVersion}"
    testImplementation 'androidx.test.ext:junit:1.1.0'
    testImplementation 'androidx.test:rules:1.1.1'
    testImplementation "androidx.test.espresso:espresso-core:${espressoVersion}"
    testImplementation "androidx.test.espresso:espresso-intents:${espressoVersion}"
    testImplementation "io.reactivex.rxjava2:rxjava:2.2.6"

    debugImplementation 'androidx.fragment:fragment-testing:1.1.0-alpha06'




    // instrumented tests
    androidTestImplementation "androidx.test:runner:1.1.1"
    androidTestImplementation 'androidx.test:rules:1.1.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation "androidx.test.espresso:espresso-core:${espressoVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:${espressoVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-intents:${espressoVersion}"
    androidTestImplementation "androidx.arch.core:core-testing:${androidxLifecycleVersion}"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:${okhttpVersion}"
    androidTestImplementation "io.mockk:mockk-android:$mockkVersion"
    androidTestImplementation "io.reactivex.rxjava2:rxjava:2.2.6"
}
